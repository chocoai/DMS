package com.junl.dms.mvc.base;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.log4j.Logger;

import com.alibaba.fastjson.JSONArray;
import com.junl.dms.mvc.jiaotong.JiaoTong;
import com.junl.dms.mvc.jiaotong.JiaoTongRelate;
import com.junl.dms.mvc.jiaotong.JiaoTongService;
import com.junl.dms.mvc.liefeng.LieFeng;
import com.junl.dms.mvc.liefeng.LieFengRelate;
import com.junl.dms.mvc.liefeng.LieFengService;
import com.junl.dms.mvc.rwtask.RwTask;
import com.junl.dms.mvc.waydisease.WayDisease;
import com.junl.dms.mvc.waydisease.WayDiseaseService;
import com.junl.dms.mvc.yanghu.YangHu;
import com.junl.dms.mvc.yanghu.YangHuRelate;
import com.junl.dms.mvc.yanghu.YangHuService;
import com.junl.dms.mvc.youwuchuli.YouWuService;
import com.junl.dms.mvc.youwuchuli.Youwu;
import com.platform.mvc.base.BaseService;


public class BaseMethodService extends BaseService {

	@SuppressWarnings("unused")
	private static Logger log = Logger.getLogger(BaseMethodService.class);

	public static final BaseMethodService service = new BaseMethodService();

	public boolean batchSave(JSONArray jsonArr,RwTask rwTask,String taskInfoRelateId,String fileName,String userIds) {
		
	    for (int i = 0; i < jsonArr.size(); i++) {
	    	//封装
	    	Map<String, Object> objMap = new HashMap<String, Object>();
	    	objMap = jsonArr.getJSONObject(i);
	    	objMap.put("luXian", rwTask.get("luXian"));
	    	objMap.put("wzType", rwTask.get("wzType"));
	    	objMap.put("wzName", rwTask.get("wzName"));
	    	objMap.put("wzMiaoShu", rwTask.get("wzMiaoShu"));
	    	objMap.put("luBingType", rwTask.get("luBingType"));
	    	objMap.put("startZHK", rwTask.get("xunchastartzhk"));
	    	objMap.put("startZHM",rwTask.get("xunchastartzhm") );
	    	objMap.put("endZHK", rwTask.get("xunchaendzhk"));
	    	objMap.put("endZHM", rwTask.get("xunchaendzhm"));
	    	objMap.put("taskInfoRelate", taskInfoRelateId);
	    	objMap.put("createuserid", userIds);
	    	objMap.put("luBingType", rwTask.get("binghaiOrQueXianType")+" : "+ rwTask.get("yuGuGongChengLiang") + " (" + rwTask.get("yuGuGongChengLiangDw") + ")") ;
	    	//导入
	    	if(fileName.equals("IMPORT.YOUWUCHULI")){//导入油污处理 已测试
	    		Youwu youwu = new Youwu();
		    	youwu.put(objMap);
		    	YouWuService.service.save(youwu,null);
	    	}else if(fileName.equals("IMPORT.JIAOTONGANQUAN")){//导入交通安全数据 已测试
	    		JiaoTong jiaotong = new JiaoTong();
	    		jiaotong.put(objMap);
	    		List<JiaoTongRelate> jiaoTongRelateList = new ArrayList<JiaoTongRelate>();
		    	JiaoTongService.service.save(jiaotong,jiaoTongRelateList,null);// 待加入关联表数据
	    	}else if(fileName.equals("IMPORT.LIEFENG")){//导入裂缝维修数据 已测试
	    		LieFeng liefeng = new LieFeng();
	    		liefeng.put(objMap);
	    		List<LieFengRelate> lieFengRelateList = new ArrayList<LieFengRelate>();
	    		LieFengService.service.save(liefeng, lieFengRelateList, null);//第二个参数为空对象？！
	    	}else if(fileName.equals("IMPORT.LUMIANZAIHAI")){;// 待加入关联表数据
	    		WayDisease wayDisease = new WayDisease();
	    		wayDisease.put(objMap);
	    		WayDiseaseService.service.save(wayDisease, null);
	    	}else if(fileName.equals("IMPORT.YANGHUTONGYONG")){//导入养护通用数据 已测试
	    		YangHu yanghu = new YangHu();
	    		yanghu.put(objMap);
	    		List<YangHuRelate> yangHuRelateList = new ArrayList<YangHuRelate>(); 
	    		YangHuService.service.save(yanghu, yangHuRelateList, null);//第二个参数为空对象？！
	    	}
		}
		//后期增加异常处理  hank
		return false;
	}

}
