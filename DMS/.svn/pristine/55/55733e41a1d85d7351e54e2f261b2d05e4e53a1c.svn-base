package com.junl.dms.mvc.yanghuyhuizong;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.log4j.Logger;

import com.jfinal.kit.PropKit;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import com.platform.mvc.base.BaseService;

public class YangHuLogService extends BaseService {

	@SuppressWarnings("unused")
	private static Logger log = Logger.getLogger(YangHuLogService.class);

	public static final YangHuLogService service = new YangHuLogService();

	public boolean save(YangHuHuiZong yangHuLog) {
		return yangHuLog.save();
	}

	public boolean delete(String ids) {
		return YangHuHuiZong.dao.deleteById(ids);
	}

	public YangHuHuiZong findById(String ids) {
		YangHuHuiZong yangHuLog = YangHuHuiZong.dao.findById(ids);
		return yangHuLog;
	}
	
	public boolean update(YangHuHuiZong yangHuLog){
		return yangHuLog.update();
	}
	
	/**
	 *  计量汇总表
	 * @param year
	 * @return
	 */
	public List<Map<String,Object>> getHuiZong(String parentid, String year,boolean check){
		String sql = "SELECT ids, levelNum, name,dw, remark FROM DMS_PZ_checkInfo WHERE parentid = '#parentid' AND isdel = 0 and year ='"+year+"' order by levelNum";
		List<Record> retList = Db.find(sql.replace("#parentid",parentid));
		List<Map<String,Object>> tabList = new ArrayList<Map<String, Object>>();
		for (int i = 0; i < retList.size(); i++) {
			Record record = retList.get(i);
			Map<String,Object> mapL = new HashMap<String, Object>();
			mapL.put("ids", record.get("ids"));
			mapL.put("levelNum", record.get("levelNum"));
			mapL.put("name", record.get("name")); //二级 
			mapL.put("dw", record.get("dw"));
			mapL.put("remark", record.get("remark"));
			List<Record> child = Db.find(sql.replace("#parentid", record.getStr("ids")));
			List<Map<String,Object>> childList = new ArrayList<Map<String, Object>>();
			int childSize = child.size();
			for (int j = 0; j < child.size(); j++) { 
				Record re = child.get(j);
				Map<String,Object> map = new HashMap<String, Object>();
				map.put("iscolspan", "false");
				if(check&&record.get("levelNum").equals("2") && PropKit.get("YANSHOU.FILTER").toString().indexOf(re.getStr("name")) == -1){
					Map<String,Object> tempMap = new HashMap<String, Object>();
					tempMap.put("tempName", re.get("name"));
					tempMap.put("levelNum", re.get("levelNum"));
					tempMap.put("name", re.get("name")+"(事故维修)");
					tempMap.put("rowspan", "2");
					tempMap.put("dw", re.get("dw"));
					tempMap.put("remark", re.get("remark"));
					map.put("iscolspan", "true");
					childList.add(tempMap);
					childSize++;
				}
				
				map.put("levelNum", re.get("levelNum"));
				map.put("name", "");
				map.put("rowspan", "1");
				map.put("tempName", re.get("name"));
				mapL.put("dw", re.get("dw"));
				mapL.put("remark", re.get("remark"));
				childList.add(map);
			}
			mapL.put("child", childList);
			mapL.put("size", childSize);
			tabList.add(mapL);
		}
		return tabList;
	}
	
	
	public List<Map<String,Object>> getTabInfo(String year,String month,String serarchTime){
		String sql = "SELECT firstLevelNumberDetail FROM DMS_PZ_yanShouXinXi GROUP BY firstLevelNumberDetail";
		List<Record> retList = Db.find(sql);
		List<Map<String,Object>> tabList = new ArrayList<Map<String, Object>>();
		for (int i = 0; i < retList.size(); i++) {
			Record record = retList.get(i);
			Map<String,Object> mapL = new HashMap<String, Object>();
			mapL.put("firstLevelNumberDetail", record.get("firstLevelNumberDetail"));
			mapL.put("index", i+1);
			mapL.put("titleName", year+"年日常养护"+month+"月清单明细表");
			mapL.put("secondName", "二单价承包项目");
			mapL.put("gcInfo", getchengbaoInfo(record.getStr("firstLevelNumberDetail"), year,serarchTime));
			tabList.add(mapL);
		}
		return tabList;
	}
	public List<Map<String,Object>> getchengbaoInfo(String tabName,String year,String serarchTime){
		String sql = "";
		List<Map<String,Object>> tabList = new ArrayList<Map<String, Object>>();
		if(!tabName.equals("安全设施")){
			sql = "SELECT * FROM DMS_PZ_yanShouXinXi ysxx LEFT JOIN( "
					+ "SELECT yanShouXiMuLevel ysxml, SUM(price) price FROM DMS_JL_jiLingXiMu where convert(varchar(7),yanShouTime,120) ='"+serarchTime +"' GROUP BY yanShouXiMuLevel ) "
					+ "jlxm ON jlxm.ysxml = ysxx.secondLevelNumber WHERE "
					+ "ysxx.firstLevelNumberDetail = '"+tabName+"' AND YEAR = '"+year+"'";
			List<Record> retList = Db.find(sql);
			for (int i = 0; i < retList.size(); i++) {
				Record record = retList.get(i);
				Map<String,Object> mapL = new HashMap<String, Object>();
				mapL.put("secondLevelNumber",record.get("secondLevelNumber"));
				mapL.put("secondLevelNumberDetail",record.get("secondLevelNumberDetail"));
				mapL.put("dw",record.get("dw"));
				mapL.put("dj",record.get("dj"));
				mapL.put("price",record.get("price"));
				tabList.add(mapL);
			}
		}else{
			
		}
		return tabList;
	}
	
	
}
